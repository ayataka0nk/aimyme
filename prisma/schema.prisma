// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                        String                     @id @default(uuid())
  email                     String                     @unique @map("email")
  name                      String                     @map("name")
  password                  String                     @map("password")
  textFunctionDefinitions   TextFunctionDefinition[]
  textFunctionLogs          TextFunctionLog[]
  projectMembers            ProjectMember[]
  monthlyProjectAllocations MonthlyProjectAllocation[]

  @@map("users")
}

model Project {
  id                        String                     @id @default(uuid())
  name                      String                     @map("name")
  description               String                     @map("description")
  isArchived                Boolean                    @default(false) @map("is_archived")
  projectMembers            ProjectMember[]
  monthlyProjectAllocations MonthlyProjectAllocation[]

  @@map("projects")
}

enum ProjectUserRole {
  ADMIN
  MEMBER
}

model ProjectMember {
  userId    String          @map("user_id")
  projectId String          @map("project_id")
  user      User            @relation(fields: [userId], references: [id])
  project   Project         @relation(fields: [projectId], references: [id])
  role      ProjectUserRole @map("role")

  @@id([userId, projectId])
  @@map("project_members")
}

model MonthlyProjectAllocation {
  id             String  @id @default(uuid())
  projectId      String  @map("project_id")
  userId         String  @map("user_id")
  year           Int  @map("year")
  month          Int  @map("month")
  allocatedHours Int     @map("allocated_hours")
  project        Project @relation(fields: [projectId], references: [id])
  user           User    @relation(fields: [userId], references: [id])

  @@unique([projectId, userId, year, month])
  @@map("monthly_project_allocations")
}

model TextFunctionLog {
  id         String   @id @default(uuid())
  userId     String   @map("user_id")
  definition String   @map("definition")
  input      String   @map("input")
  output     String   @map("output")
  createdAt  DateTime @default(now()) @map("created_at")
  user       User     @relation(fields: [userId], references: [id])

  @@map("text_function_logs")
}

model TextFunctionDefinition {
  id         String @id @default(uuid())
  name       String @map("name")
  definition String @map("definition")
  userId     String @map("user_id")
  user       User   @relation(fields: [userId], references: [id])

  @@map("text_function_definitions")
}
